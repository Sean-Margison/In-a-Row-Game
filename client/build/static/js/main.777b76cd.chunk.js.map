{"version":3,"sources":["comp/Cell.js","comp/Column.js","comp/Board.js","comp/Menu.js","socket.js","comp/Game.js","index.js"],"names":["Cell","props","claim","player","state","setState","this","init","prevprops","className","React","Component","Column","cells","y","rows","push","ref","createRef","x","onClick","e","clickedColumn","Board","cell","columns","current","moves","winner","gravity","runs","mode","multiplayer","enabled","guid","gameid","started","bound","turn","cols","playLocal","bind","index","gamestart","copy","socket","on","data","id","receiveEvent","split","off","emit","sender","event","column","playTurn","win","Array","from","currentTarget","children","indexOf","target","yIndex","forced","playedX","playedY","replicate","replicateTurn","length","matches","vert","up","down","vertical","horz","right","left","horizontal","diag","pos","diagUp","diagDown","message","Menu","isPlaying","alert","Math","max","changeGame","restart","endGame","custom","setGameMode","document","querySelector","classList","remove","getElementById","toggle","main","onTouchEnd","onChange","value","htmlFor","type","name","min","defaultValue","title","defaultChecked","checked","ingame","toggleMenu","SocketContext","createContext","Game","gameOver","isTouch","touch","undefined","board","Consumer","width","alt","src","style","paddingLeft","io","DOM","render","Provider"],"mappings":"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","file":"static/js/main.777b76cd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Cell extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tplayer: null\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() { this.init(); }\r\n\tcomponentDidUpdate(prevprops) {\r\n\t\tif (prevprops !== this.props) {\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.setState({ player: null });\r\n\t}\r\n\r\n\tclaim = (player) => {\r\n\t\tif (this.state.player === null) {\r\n\t\t\tthis.setState({ player: player });\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.player !== null) {\r\n\t\t\treturn (<div className={`cell ${(this.state.player ? 'black' : 'red')}`}></div>);\r\n\t\t} else {\r\n\t\t\treturn (<span className=\"cell open\"></span>);\r\n\t\t}\r\n\t};\r\n\r\n}","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nexport default class Column extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\t super(props);\r\n\r\n\t\t this.state = {\r\n\t\t\t  cells: []\r\n\t\t }\r\n\t}\r\n\r\n\tcomponentDidMount() { this.init(); }\r\n\tcomponentDidUpdate(prevprops){\r\n\t\tif(prevprops !== this.props){\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t}\r\n\r\n\tinit(){\r\n\t\tlet cells = [];\r\n\t\tfor (let y = 0; y < this.props.rows; y++) {\r\n\t\t\t cells.push(<Cell ref={React.createRef()} key={`cell-${this.props.x}-${y}`} x={this.props.x} y={y} />);\r\n\t\t}\r\n\r\n\t\tthis.setState({ cells: cells });\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\t return (<div className=\"col\" onClick={(e) => this.props.clickedColumn(this, e)}>{this.state.cells}</div>);\r\n\r\n\t};\r\n\r\n};","import React from 'react';\r\nimport Column from './Column.js';\r\nimport '../css/Board.css';\r\n\r\nexport default class Board extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmoves: 0,\r\n\t\t\tplayer: true,\r\n\t\t\trows: 0,\r\n\t\t\tcolumns: [],\r\n\t\t\twinner: null,\r\n\t\t\tgravity: true,\r\n\t\t\truns: 0,\r\n\t\t\tmode: this.props.mode,\r\n\t\t\tmultiplayer: {\r\n\t\t\t\tenabled: this.props.multiplayer,\r\n\t\t\t\tguid: this.props.guid,\r\n\t\t\t\tgameid: null,\r\n\t\t\t\tstarted: false,\r\n\t\t\t\tbound: false,\r\n\t\t\t\tturn: false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() { this.init(); }\r\n\tcomponentDidUpdate(prevprops) {\r\n\t\tif (prevprops !== this.props) {\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t}\r\n\r\n\tinit() {\r\n\t\tlet columns = [];\r\n\r\n\t\tfor (let x = 0; x < this.props.cols; x++) {\r\n\t\t\tcolumns.push(<Column ref={React.createRef()} rows={this.props.rows} clickedColumn={this.playLocal.bind(this)} key={`column-${x}`} index={x} />);\r\n\t\t}\r\n\r\n\t\tif (this.props.multiplayer && this.props.mode !== \"create\") {\r\n\t\t\tlet gamestart = \"game:\" + this.props.guid;\r\n\r\n\t\t\tlet copy = this.state.multiplayer;\r\n\t\t\tcopy.socket = this.props.socket;\r\n\t\t\tcopy.enabled = this.props.multiplayer;\r\n\t\t\tcopy.guid = this.props.guid;\r\n\t\t\tcopy.started = false;\r\n\t\t\tcopy.turn = false;\r\n\r\n\t\t\tthis.setState({ multiplayer: copy });\r\n\r\n\t\t\t// Register to game listener first\r\n\t\t\tthis.props.socket.on(gamestart, (data) => {\r\n\t\t\t\t// Register for game events\r\n\t\t\t\tthis.props.socket.on(\"game:\" + data.id, (data) => this.receiveEvent(data));\r\n\t\t\t\t// Register if opponent disconnects\r\n\t\t\t\tthis.props.socket.on(\"player:\" + data.id.split(\"|vs|\")[data.player ? 1 : 0], (data) => this.receiveEvent(data));\r\n\t\t\t\tthis.props.socket.off(gamestart);\r\n\r\n\t\t\t\tlet copy = this.state.multiplayer;\r\n\t\t\t\tcopy.gameid = data.id;\r\n\t\t\t\tcopy.started = true;\r\n\t\t\t\tcopy.turn = data.player;\r\n\r\n\t\t\t\tthis.setState({ multiplayer: copy });\r\n\t\t\t});\r\n\r\n\t\t\t// Request game start\r\n\t\t\tthis.props.socket.emit(\"start\", this.state.multiplayer.guid, this.state.mode);\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tcolumns: columns,\r\n\t\t\tcols: this.props.cols,\r\n\t\t\trows: this.props.rows,\r\n\t\t\tmoves: this.props.cols * this.props.rows,\r\n\t\t\tplayer: true,\r\n\t\t\twinner: null,\r\n\t\t\tgravity: this.props.gravity,\r\n\t\t\truns: this.props.runs,\r\n\t\t\tmode: this.props.mode\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif (this.state.multiplayer.enabled) {\r\n\t\t\tthis.state.multiplayer.socket.emit(\"forfeit\", this.state.multiplayer.guid);\r\n\t\t\tthis.state.multiplayer.socket?.off();\r\n\t\t}\r\n\t}\r\n\r\n\t// Get opponent move\r\n\treceiveEvent(data) {\r\n\t\t// Ignore your own moves\r\n\t\tif (data.sender !== this.state.multiplayer.guid) {\r\n\t\t\tswitch (data.event) {\r\n\t\t\t\tcase \"played\":\r\n\t\t\t\t\tif (data.x >= 0 && data.y >= 0) {\r\n\t\t\t\t\t\tlet column = this.state.columns[data.x].ref.current;\r\n\t\t\t\t\t\tif (column !== null) {\r\n\t\t\t\t\t\t\tthis.playTurn(column, data.y, true);\r\n\r\n\t\t\t\t\t\t\tif (this.state.winner === null) {\r\n\t\t\t\t\t\t\t\tlet copy = this.state.multiplayer;\r\n\t\t\t\t\t\t\t\tcopy.turn = true;\r\n\t\t\t\t\t\t\t\tthis.setState({ multiplayer: copy });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"forfeit\":\r\n\t\t\t\t\tif (this.state.winner === null) {\r\n\t\t\t\t\t\tlet copy = this.state.multiplayer;\r\n\t\t\t\t\t\tcopy.turn = true;\r\n\t\t\t\t\t\tthis.setState({ winner: true, multiplayer: copy });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Replicate move to opponent\r\n\treplicateTurn(x, y, win) {\r\n\t\tthis.props.socket.emit(\"turn-played\", { id: this.state.multiplayer.gameid, data: { event: \"played\", x: x, y: y, sender: this.state.multiplayer.guid } });\r\n\r\n\t\t// Stay the winner\r\n\t\tif (!win) {\r\n\t\t\tlet copy = this.state.multiplayer;\r\n\t\t\tcopy.turn = false;\r\n\t\t\tthis.setState({ multiplayer: copy });\r\n\t\t} else {\r\n\t\t\tthis.props.socket.off();\r\n\t\t}\r\n\t}\r\n\r\n\tplayLocal(column, e) {\r\n\t\tthis.playTurn(column, Array.from(e.currentTarget.children).indexOf(e.target));\r\n\t}\r\n\r\n\tplayTurn(column, yIndex, forced) {\r\n\r\n\t\tlet playedX;\r\n\t\tlet playedY;\r\n\r\n\t\tlet replicate = (winner) => {\r\n\t\t\tif (this.state.multiplayer.enabled && playedX >= 0 && playedY >= 0) {\r\n\t\t\t\tif (this.state.multiplayer.turn) {\r\n\t\t\t\t\tthis.replicateTurn(playedX, playedY, winner);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.state.multiplayer.enabled || this.state.multiplayer.turn || forced) {\r\n\t\t\tconst cells = column.state.cells;\r\n\t\t\tif (this.state.winner !== null) return;\r\n\r\n\t\t\tif (this.state.gravity) {\r\n\t\t\t\t// Check and Claim First Available Cell: (0,0) is top-left, chips fall to the bottom\r\n\t\t\t\tfor (let y = cells.length - 1; y >= 0; y--) {\r\n\r\n\t\t\t\t\t// Try to claim cell\r\n\t\t\t\t\tif (cells[y].ref.current.claim(this.state.player)) {\r\n\t\t\t\t\t\tplayedX = column.props.index;\r\n\t\t\t\t\t\tplayedY = y;\r\n\r\n\t\t\t\t\t\tif (this.winner(column.props.index, y)) {\r\n\t\t\t\t\t\t\tthis.setState({ winner: this.state.multiplayer.enabled ? this.state.multiplayer.turn : this.state.player });\r\n\t\t\t\t\t\t\treplicate(true);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Swap Players\r\n\t\t\t\t\t\t\tthis.setState({ player: !this.state.player, moves: this.state.moves - 1 });\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (cells[yIndex]) {\r\n\t\t\t\t\tif (cells[yIndex].ref.current.claim(this.state.player)) {\r\n\t\t\t\t\t\tplayedX = column.props.index;\r\n\t\t\t\t\t\tplayedY = yIndex;\r\n\r\n\t\t\t\t\t\tif (this.winner(column.props.index, yIndex)) {\r\n\t\t\t\t\t\t\tthis.setState({ winner: this.state.multiplayer.enabled ? this.state.multiplayer.turn : this.state.player });\r\n\t\t\t\t\t\t\treplicate(true);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Swap Players\r\n\t\t\t\t\t\t\tthis.setState({ player: !this.state.player, moves: this.state.moves - 1 });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treplicate(false);\r\n\t\t}\r\n\t}\r\n\r\n\tcell = (x, y) => {\r\n\t\treturn this.state.columns[x].ref.current.state.cells[y].ref.current;\r\n\t}\r\n\r\n\t// Check if move was a winner\r\n\twinner(x, y) {\r\n\r\n\t\tlet matches = (cell) => {\r\n\t\t\treturn cell.state.player === this.state.player;\r\n\t\t}\r\n\r\n\t\t// Check vertical\r\n\t\tlet vertical = () => {\r\n\t\t\tlet vert = 1;\r\n\r\n\t\t\t// Up\r\n\t\t\tfor (let up = y + 1; up < this.state.rows; up++) {\r\n\t\t\t\tif (!matches(this.cell(x, up))) break;\r\n\t\t\t\tvert++;\r\n\t\t\t}\r\n\r\n\t\t\t// Down\r\n\t\t\tfor (let down = y - 1; down >= 0; down--) {\r\n\t\t\t\tif (!matches(this.cell(x, down))) break;\r\n\t\t\t\tvert++;\r\n\t\t\t}\r\n\r\n\t\t\treturn vert >= this.state.runs;\r\n\t\t}\r\n\r\n\t\t// Check horizontal\r\n\t\tlet horizontal = () => {\r\n\t\t\tlet horz = 1;\r\n\r\n\t\t\t// Right\r\n\t\t\tfor (let right = x + 1; right < this.state.cols; right++) {\r\n\t\t\t\tif (!matches(this.cell(right, y))) break;\r\n\t\t\t\thorz++;\r\n\t\t\t}\r\n\r\n\t\t\t// Left\r\n\t\t\tfor (let left = x - 1; left >= 0; left--) {\r\n\t\t\t\tif (!matches(this.cell(left, y))) break;\r\n\t\t\t\thorz++;\r\n\t\t\t}\r\n\r\n\t\t\treturn horz >= this.state.runs;\r\n\t\t}\r\n\r\n\t\t// Check Diagonal Up\r\n\t\tlet diagUp = () => {\r\n\t\t\tlet diag = 1;\r\n\r\n\t\t\t// Up + Right\r\n\t\t\tlet pos = { x: x, y: y };\r\n\t\t\twhile (++pos.x < this.state.cols && --pos.y >= 0) {\r\n\t\t\t\tif (!matches(this.cell(pos.x, pos.y))) break;\r\n\t\t\t\tdiag++;\r\n\t\t\t}\r\n\r\n\t\t\t// Down + Left\r\n\t\t\tpos = { x: x, y: y }\r\n\t\t\twhile (--pos.x >= 0 && ++pos.y < this.state.rows) {\r\n\t\t\t\tif (!matches(this.cell(pos.x, pos.y))) break;\r\n\t\t\t\tdiag++;\r\n\t\t\t}\r\n\r\n\t\t\treturn diag >= this.state.runs;\r\n\t\t}\r\n\r\n\t\t// Check Diagonal Down\r\n\t\tlet diagDown = () => {\r\n\t\t\tlet diag = 1;\r\n\r\n\t\t\t// Up + Left\r\n\t\t\tlet pos = { x: x, y: y };\r\n\t\t\twhile (--pos.x >= 0 && --pos.y >= 0) {\r\n\t\t\t\tif (!matches(this.cell(pos.x, pos.y))) break;\r\n\t\t\t\tdiag++;\r\n\t\t\t}\r\n\r\n\t\t\t// Down + Right\r\n\t\t\tpos = { x: x, y: y }\r\n\t\t\twhile (++pos.x < this.state.cols && ++pos.y < this.state.rows) {\r\n\t\t\t\tif (!matches(this.cell(pos.x, pos.y))) break;\r\n\t\t\t\tdiag++;\r\n\t\t\t}\r\n\r\n\t\t\treturn diag >= this.state.runs;\r\n\t\t}\r\n\r\n\t\treturn vertical() || horizontal() || diagUp() || diagDown();\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet message = \"\";\r\n\t\tif (this.state.multiplayer.enabled) {\r\n\t\t\tif (this.state.multiplayer.started) {\r\n\t\t\t\tif (this.state.winner !== null) {\r\n\t\t\t\t\tmessage = this.state.multiplayer.turn ? \"YOU WIN!\" : \"You Lost.\";\r\n\t\t\t\t} else if (this.state.moves <= 0) {\r\n\t\t\t\t\tmessage = \"DRAW\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.state.multiplayer.turn) {\r\n\t\t\t\t\t\tmessage = \"Your Turn...\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmessage = \"Opponent's Turn...\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tmessage = \"Finding Opponent...\";\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.state.winner !== null) {\r\n\t\t\t\tmessage = (this.state.player ? \"Black\" : \"Red\") + \" WINS!\";\r\n\t\t\t} else if (this.state.moves <= 0) {\r\n\t\t\t\tmessage = \"DRAW\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (message.length > 0) {\r\n\t\t\tmessage = <span className=\"message\">{message}</span>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={(this.state.multiplayer.enabled && this.state.multiplayer.turn ? \"turn\" : \"\")}>\r\n\t\t\t\t{message}\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"board\"\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t(this.state.player ? 'black' : 'red') +\r\n\t\t\t\t\t\t(this.state.gravity ? \" gravity\" : \"\") +\r\n\t\t\t\t\t\t(this.state.winner !== null ? \" done\" : \"\")\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t{this.state.columns}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n};","import React from 'react';\r\nimport '../css/Hamburger.css';\r\nimport '../css/Toggle.css';\r\nimport '../css/Menu.css';\r\n\r\nexport default class Menu extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\trows: 10,\r\n\t\t\tcols: 10,\r\n\t\t\truns: 4,\r\n\t\t\tgravity: true,\r\n\t\t\tisPlaying: false\r\n\t\t}\r\n\t}\r\n\r\n\tcustom(e) {\r\n\t\tif (this.state.cols < 0 || this.state.cols > 10) {\r\n\t\t\talert(\"Columns must be between 1 and 10\");\r\n\t\t\treturn;\r\n\t\t} else if (this.state.rows < 0 || this.state.rows > 10) {\r\n\t\t\talert(\"Rows must be between 1 and 10\");\r\n\t\t\treturn;\r\n\t\t} else if (this.state.runs < 2 || this.state.runs > Math.max(this.state.cols, this.state.rows)) {\r\n\t\t\talert(\"Runs must be less than either rows or columns\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.changeGame(this.state.cols, this.state.rows, this.state.runs, this.state.gravity, true, e);\r\n\t}\r\n\r\n\tcomponentDidMount() { this.init(); }\r\n\tcomponentDidUpdate(prevprops) {\r\n\t\tif (prevprops !== this.props) {\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.setState({ isPlaying: this.props.isPlaying });\r\n\t}\r\n\r\n\trestart(e) {\r\n\t\tthis.props.restart(e);\r\n\t}\r\n\r\n\tendGame(e) {\r\n\t\tthis.props.endGame(e);\r\n\t}\r\n\r\n\tchangeGame(rows, cols, runs, gravity, custom, e) {\r\n\t\tthis.setState({ isPlaying: true });\r\n\t\tthis.props.setGameMode(rows, cols, runs, gravity, custom, e);\r\n\r\n\t\tdocument.querySelector(\".hamburger\").classList.remove(\"is-active\");\r\n\t\tdocument.getElementById(\"menu\").classList.remove(\"open\");\r\n\t}\r\n\r\n\ttoggleMenu(e) {\r\n\t\te.currentTarget.classList.toggle(\"is-active\");\r\n\t\tdocument.getElementById(\"menu\").classList.toggle(\"open\");\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet main = (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>In-a-Row</h1>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<label id=\"multi\" className={this.props.multiplayer ? \"enabled\" : \"disabled\"}><span>Multiplayer</span> <span>{this.props.multiplayer ? \"Online\" : \"Offline\"}</span></label>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li><button onTouchEnd={(e) => this.changeGame(7, 6, 4, true, e)} onClick={(e) => this.changeGame(7, 6, 4, true, false)}>Connect Four</button></li>\r\n\t\t\t\t\t<li><button onTouchEnd={(e) => this.changeGame(3, 3, 3, false, e)} onClick={(e) => this.changeGame(3, 3, 3, false, false)}>Tic-Tac-Toe</button></li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<label>Local Custom</label>\r\n\t\t\t\t\t\t<ul className=\"custom\">\r\n\t\t\t\t\t\t\t<li onChange={(e) => this.setState({ cols: e.target.value })}>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"col\">Columns</label>\r\n\t\t\t\t\t\t\t\t<input type=\"number\" name=\"col\" min=\"1\" max=\"10\" defaultValue=\"10\" title=\"The number of columns for the board (1-10)\" />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li onChange={(e) => this.setState({ rows: e.target.value })}>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"row\">Rows</label>\r\n\t\t\t\t\t\t\t\t<input type=\"number\" name=\"row\" min=\"1\" max=\"10\" defaultValue=\"10\" title=\"The number of rows for the board (1-10)\" />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li onChange={(e) => this.setState({ runs: e.target.value })}>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"run\">To Win</label>\r\n\t\t\t\t\t\t\t\t<input type=\"number\" name=\"run\" min=\"2\" defaultValue=\"4\" title=\"The number of matches in a row to win!\" />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"checkbox\">Gravity</label>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div id=\"toggle\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"checkbox\" defaultChecked=\"\" onChange={(e) => this.setState({ gravity: !e.target.checked })} />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"knobs\"></div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"layer\"></div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button onTouchEnd={(e) => this.custom(e)} onClick={(e) => this.custom(e)}>Play Local</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tlet ingame = (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>In-a-Row</h1>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><button onClick={(e) => this.restart(e)}>Restart</button></li>\r\n\t\t\t\t\t<li><button onClick={(e) => this.endGame(e)}>Leave Game</button></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div className={(this.state.isPlaying ? \"play\" : \"start\")}>\r\n\t\t\t\t<button title=\"Menu\" className=\"hamburger hamburger--squeeze js-hamburger\" onClick={(e) => this.toggleMenu(e)}>\r\n\t\t\t\t\t<div className=\"hamburger-box\">\r\n\t\t\t\t\t\t<div className=\"hamburger-inner\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div id=\"menu\">\r\n\t\t\t\t\t{this.state.isPlaying ? ingame : main}\r\n\t\t\t\t\t<span id=\"author\"><span>By:</span> Sean Margison</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React from 'react'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport default SocketContext","import React from 'react';\r\nimport Board from './Board';\r\nimport Menu from './Menu';\r\nimport SocketContext from '../socket';\r\n\r\nexport default class Game extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tisPlaying: false,\r\n\t\t\tgameOver: false,\r\n\t\t\tcols: 7,\r\n\t\t\trows: 6,\r\n\t\t\truns: 4,\r\n\t\t\tgravity: true,\r\n\t\t\tisTouch: false,\r\n\t\t\tmode: \"\",\r\n\t\t\tmultiplayer: {\r\n\t\t\t\tsocket: this.props.socket,\r\n\t\t\t\tguid: null,\r\n\t\t\t\tenabled: false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.state.multiplayer.socket.on(\"guid\", guid => {\r\n\t\t\tlet copy = this.state.multiplayer;\r\n\t\t\tcopy.enabled = true;\r\n\t\t\tcopy.guid = guid;\r\n\r\n\t\t\tthis.setState({ multiplayer: copy });\r\n\t\t});\r\n\t}\r\n\r\n\tendGame() {\r\n\t\tlet copy = this.state.multiplayer;\r\n\t\tcopy.enabled = this.state.multiplayer.socket !== null && this.state.multiplayer.guid !== null;\r\n\t\tthis.setState({ isPlaying: false, multiplayer: copy });\r\n\t}\r\n\r\n\t// Local Only\r\n\trestart() {\r\n\t\tlet copy = this.state.multiplayer;\r\n\t\tcopy.enabled = this.state.multiplayer.socket !== null && this.state.multiplayer.guid !== null;\r\n\t\tthis.setGameMode();\r\n\t}\r\n\r\n\tsetGameMode(cols, rows, runs, gravity, custom, e) {\r\n\t\t// e null on restart\r\n\t\tlet mode;\r\n\t\tlet touch = (e ? e.type === 'touchend' : this.state.isTouch);\r\n\r\n\t\tif (custom) {\r\n\t\t\tmode = \"create\";\r\n\t\t} else if (cols === 7 && rows === 6 && gravity && runs === 4) {\r\n\t\t\tmode = \"connect\";\r\n\t\t} else if (cols === 3 && rows === 3 && !gravity && runs === 3) {\r\n\t\t\tmode = \"tictac\";\r\n\t\t}\r\n\r\n\t\tmode = mode || this.state.mode;\r\n\r\n\t\tlet copy = this.state.multiplayer;\r\n\t\tcopy.enabled = this.state.multiplayer.socket !== null && mode !== \"create\" && this.state.multiplayer.guid !== null;\r\n\r\n\t\tthis.setState({\r\n\t\t\tcols: cols || this.state.cols,\r\n\t\t\trows: rows || this.state.rows,\r\n\t\t\truns: runs || this.state.runs,\r\n\t\t\tgravity: gravity !== undefined ? gravity : this.state.gravity,\r\n\t\t\tisPlaying: true,\r\n\t\t\tisTouch: touch,\r\n\t\t\tmode: mode,\r\n\t\t\tmultiplayer: copy\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet board = \"\";\r\n\t\tif (this.state.isPlaying) {\r\n\t\t\tboard =\r\n\t\t\t\t<SocketContext.Consumer>\r\n\t\t\t\t{\r\n\t\t\t\t\tsocket =>\r\n\t\t\t\t\t\t<Board\r\n\t\t\t\t\t\t\tcols={this.state.cols}\r\n\t\t\t\t\t\t\trows={this.state.rows}\r\n\t\t\t\t\t\t\truns={this.state.runs}\r\n\t\t\t\t\t\t\tmode={this.state.mode}\r\n\t\t\t\t\t\t\tgravity={this.state.gravity}\r\n\t\t\t\t\t\t\tmultiplayer={this.state.multiplayer.enabled}\r\n\t\t\t\t\t\t\tsocket={socket}\r\n\t\t\t\t\t\t\tguid={this.state.multiplayer.guid}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t</SocketContext.Consumer>\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div id=\"game\" className={(this.state.mode) + (this.state.isTouch ? \" touch\" : \"\") + (this.state.multiplayer.enabled ? \" multi\" : \"\")}>\r\n\t\t\t\t<div className=\"bg\"></div>\r\n\t\t\t\t<Menu setGameMode={this.setGameMode.bind(this)} isPlaying={this.state.isPlaying} endGame={this.endGame.bind(this)} restart={this.restart.bind(this)} multiplayer={this.state.multiplayer.enabled} />\r\n\t\t\t\t{board}\r\n\t\t\t\t<div id=\"logos\">\r\n\t\t\t\t\t<img width=\"100\" alt=\"React Logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg\" />\r\n\t\t\t\t\t<img width=\"100\" alt=\"Node Logo\" src=\"https://nodejs.org/static/images/logos/nodejs-new-pantone-white.svg\" />\r\n\t\t\t\t\t<img width=\"65\" alt=\"Socket IO Logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/96/Socket-io.svg/1024px-Socket-io.svg.png\" style={{ paddingLeft: 15 }} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t};\r\n};","import React from 'react';\nimport DOM from 'react-dom';\nimport './css/Main.css';\nimport Game from './comp/Game.js';\nimport SocketContext from './socket'\nimport * as io from 'socket.io-client'\n\nconst socket = io();\n\nDOM.render(\n\t<SocketContext.Provider value={socket}>\n\t\t<SocketContext.Consumer>\n\t\t\t{socket => <Game socket={socket} />}\n\t\t</SocketContext.Consumer>\n\t</SocketContext.Provider>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}